{"version":3,"sources":["Navbar.js","LoadingSpinner.js","index.js"],"names":["Navbar","grandPrixRef","useRef","useState","isMenuOpen","setIsMenuOpen","isGrandPrixOpen","setIsGrandPrixOpen","useEffect","menuItems","Array","from","document","getElementsByClassName","subMenuItems","forEach","menuItem","addEventListener","closeMenu","subMenuItem","grandPrix","current","style","height","toggleMenu","className","to","title","ref","onClick","largeMenu","src","alt","size","color","LoadingSpinner","HowToRace","React","lazy","RacesAndWinners","Contact","Landing","App","basename","exact","path","fallback","ReactDOM","render","getElementById"],"mappings":"wSA4HeA,EAvHA,WACb,IAAMC,EAAeC,iBAAO,MADT,EAEiBC,oBAAS,GAF1B,mBAEZC,EAFY,KAEAC,EAFA,OAG2BF,oBAAS,GAHpC,mBAGZG,EAHY,KAGKC,EAHL,KAKnBC,qBAAU,WACR,GAAIJ,EAAY,CACd,IAAMK,EAAYC,MAAMC,KAAKC,SAASC,uBAAuB,cACvDC,EAAeJ,MAAMC,KAAKC,SAASC,uBAAuB,kBAC5DJ,GAAaK,IACfL,EAAUM,SAAQ,SAAAC,GAChBA,EAASC,iBAAiB,QAASC,MAErCJ,EAAaC,SAAQ,SAAAI,GACnBA,EAAYF,iBAAiB,QAASC,WAM9CV,qBAAU,WACR,IAAMY,EAAYnB,EAAaoB,QAE7BD,EAAUE,MAAMC,OADdjB,EACuB,QAEA,SAE1B,CAACA,IAEJ,IAAMkB,EAAa,WACjBnB,GAAeD,IAOXc,EAAY,WACZd,IACFC,GAAc,GACdE,GAAmB,KAIjBE,EACJ,wBAAIgB,UAAU,cACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,YAAYF,UAAU,kBAAzC,SAIF,yBAAKG,IAAK3B,EAAcwB,UAAU,WAAWI,QAlBzB,WACtBtB,GAAoBD,KAkBhB,iDAIEA,GACE,wBAAImB,UAAU,kBACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMC,GAAG,qBAAqBC,MAAM,oBAAoBF,UAAU,kBAAlE,oBAIF,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMC,GAAG,eAAeC,MAAM,cAAcF,UAAU,kBAAtD,kBAcV,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,UAAUF,UAAU,kBAA9C,aA2BAK,EACJ,yBAAKL,UAAU,cACZhB,GAGL,OACE,6BAzBE,yBAAKgB,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,IAAIG,QAASX,GACpB,yBACEa,IAAI,iHACJC,IAAI,cACJH,QAASX,KAIXd,GACEK,EAGJ,yBAAKgB,UAAU,oBAAoBI,QAASL,GAC1C,kBAAC,IAAD,CAAgBS,KAAM,GAAIC,MAAM,WAanCJ,I,gBCvGQK,EAZQ,WACrB,OACE,yBAAKV,UAAU,6BACb,kBAAC,IAAD,CACEQ,KAAM,GACNC,MAAM,OACNT,UAAU,sBCCZW,EAAYC,IAAMC,MAAK,kBAAM,gCAC7BC,EAAkBF,IAAMC,MAAK,kBAAM,gCAEnCE,EAAUH,IAAMC,MAAK,kBAAM,sDAC3BG,EAAUJ,IAAMC,MAAK,kBAAM,sDAEjC,SAASI,IACP,OACE,kBAAC,IAAD,CAAQC,SAAS,KACf,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,KAChB,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACL,EAAD,QAGJ,kBAAC,IAAD,CAAOI,KAAK,gBACV,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACV,EAAD,QAGJ,kBAAC,IAAD,CAAOS,KAAK,sBACV,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACP,EAAD,QASJ,kBAAC,IAAD,CAAOM,KAAK,YACV,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACN,EAAD,YAUhBO,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASqC,eAAe,W","file":"static/js/main.f406c898.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport './resources/Navbar.css'\r\nimport { CgMenuRightAlt } from 'react-icons/cg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  const grandPrixRef = useRef(null)\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const [isGrandPrixOpen, setIsGrandPrixOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isMenuOpen) {\r\n      const menuItems = Array.from(document.getElementsByClassName('menu-item'))\r\n      const subMenuItems = Array.from(document.getElementsByClassName('sub-menu-item'))\r\n      if (menuItems && subMenuItems) {\r\n        menuItems.forEach(menuItem => {\r\n          menuItem.addEventListener('click', closeMenu)\r\n        })\r\n        subMenuItems.forEach(subMenuItem => {\r\n          subMenuItem.addEventListener('click', closeMenu)\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const grandPrix = grandPrixRef.current\r\n    if (isGrandPrixOpen) {\r\n      grandPrix.style.height = '182px'\r\n    } else {\r\n      grandPrix.style.height = '60px'\r\n    }\r\n  }, [isGrandPrixOpen])\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen)\r\n  }\r\n\r\n  const toggleGrandPrix = () => {\r\n    setIsGrandPrixOpen(!isGrandPrixOpen)\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    if (isMenuOpen) {\r\n      setIsMenuOpen(false)\r\n      setIsGrandPrixOpen(false)\r\n    }\r\n  }\r\n\r\n  const menuItems = (\r\n    <ul className='menu-items'>\r\n      <li className='menu-item'>\r\n        <Link to='/' title='Home page' className='menu-item-link'>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <div ref={grandPrixRef} className='sub-menu' onClick={toggleGrandPrix}>\r\n        <span>\r\n          FWLR Grand Prix\r\n        </span>\r\n        {\r\n          isGrandPrixOpen && (\r\n            <ul className='sub-menu-items'>\r\n              <li className='sub-menu-item'>\r\n                <Link to='/races-and-winners' title='Races and winners' className='menu-item-link'>\r\n                  Races & Winners\r\n                </Link>\r\n              </li>\r\n              <li className='sub-menu-item'>\r\n                <Link to='/how-to-race' title='How to race' className='menu-item-link'>\r\n                  How to Race\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )\r\n        }\r\n      </div>\r\n      {/* TODO: Include in later release */}\r\n      {/* <li className='menu-item'>\r\n        <Link to='/pit-crew' title='Pit Crew' className='menu-item-link'>\r\n          Pit Crew\r\n        </Link>\r\n      </li> */}\r\n      <li className='menu-item'>\r\n        <Link to='/contact' title='Contact' className='menu-item-link'>\r\n          Contact\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  )\r\n  const burgerMenu = () => {\r\n    return (\r\n      <div className='burger-menu'>\r\n        <Link to='/' onClick={closeMenu}>\r\n          <img\r\n            src='https://res.cloudinary.com/dtweazqf2/image/upload/h_40,f_auto,q_auto/v1598272317/Original_FWLR_Logo_htth7t.png'\r\n            alt='Fowler logo'\r\n            onClick={closeMenu}\r\n          />\r\n        </Link>\r\n        {\r\n          isMenuOpen && (\r\n            menuItems\r\n          )\r\n        }\r\n        <div className='burger-menu-click' onClick={toggleMenu}>\r\n          <CgMenuRightAlt size={50} color='#fff' />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  const largeMenu = (\r\n    <div className='large-menu'>\r\n      {menuItems}\r\n    </div>\r\n  )\r\n  return (\r\n    <nav>\r\n      {burgerMenu()}\r\n      {largeMenu}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './resources/LoadingSpinner.css'\r\nimport { VscLoading } from 'react-icons/vsc'\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className='loading-spinner-container'>\r\n      <VscLoading\r\n        size={60}\r\n        color='#fff'\r\n        className='loading-spinner'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner\r\n","import React, { Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './resources/App.css'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport Navbar from './Navbar'\r\nimport LoadingSpinner from './LoadingSpinner'\r\n\r\nconst HowToRace = React.lazy(() => import('./HowToRace'))\r\nconst RacesAndWinners = React.lazy(() => import('./RacesAndWinners'))\r\n// const PitCrew = React.lazy(() => import('./PitCrew')) // TODO: Include in later release\r\nconst Contact = React.lazy(() => import('./Contact'))\r\nconst Landing = React.lazy(() => import('./Landing'))\r\n\r\nfunction App () {\r\n  return (\r\n    <Router basename='/'>\r\n      <div className='App'>\r\n        <Navbar />\r\n        <div className='page-content'>\r\n          <Switch>\r\n            <Route exact path='/'>\r\n              <Suspense fallback={<LoadingSpinner />}>\r\n                <Landing />\r\n              </Suspense>\r\n            </Route>\r\n            <Route path='/how-to-race'>\r\n              <Suspense fallback={<LoadingSpinner />}>\r\n                <HowToRace />\r\n              </Suspense>\r\n            </Route>\r\n            <Route path='/races-and-winners'>\r\n              <Suspense fallback={<LoadingSpinner />}>\r\n                <RacesAndWinners />\r\n              </Suspense>\r\n            </Route>\r\n            {/* TODO: Include in later release */}\r\n            {/* <Route path='/pit-crew'>\r\n              <Suspense fallback={<LoadingSpinner />}>\r\n                <PitCrew />\r\n              </Suspense>\r\n            </Route> */}\r\n            <Route path='/contact'>\r\n              <Suspense fallback={<LoadingSpinner />}>\r\n                <Contact />\r\n              </Suspense>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}